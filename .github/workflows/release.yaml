on:
  push:
    tags:
      - "*"

name: Build and publish release

env:
  SLUG_DOCKERHUB: ${{ secrets.DOCKER_USERNAME }}/ghs-server
  SLUG_GHCR: ghcr.io/${{ github.repository_owner }}/ghs-server

jobs:
  create_release:
    name: Create Draft Release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
  release_jar:
    name: Release JAR
    needs: create_release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots clean package
      - name: Upload release jar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./target/ghs-server-${{github.ref_name}}.jar
          asset_name: ghs-server-${{github.ref_name}}.jar
          asset_content_type: application/octet-stream
  publish:
    name: Publish Draft Release
    needs: [create_release, release_jar]
    runs-on: ubuntu-latest
    steps:
      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          release_id: ${{ needs.create_release.outputs.release_id }}
  
  build-and-publish-docker-image:
    name: Build and Publish Docker Image
    needs: publish
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
      -
        name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.SLUG_DOCKERHUB }}
            ${{ env.SLUG_GHCR }}
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }} # automatic: https://docs.github.com/en/actions/security-guides/automatic-token-authentication
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      -
        name: Inspect image
        if: github.event_name != 'pull_request'
        run: |
          docker pull ${{ env.SLUG_DOCKERHUB }}:${{ steps.meta.outputs.version }}
          docker image inspect ${{ env.SLUG_DOCKERHUB }}:${{ steps.meta.outputs.version }}
          docker pull ${{ env.SLUG_GHCR }}:${{ steps.meta.outputs.version }}
          docker image inspect ${{ env.SLUG_GHCR }}:${{ steps.meta.outputs.version }}
